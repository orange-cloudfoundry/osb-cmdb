/*
 * Copyright 2002-2020 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
	repositories {
		maven { url "https://repo.spring.io/plugins-release" }
	}
	dependencies {
		classpath("org.asciidoctor:asciidoctor-gradle-plugin:1.6.1")
		classpath("org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.16")
	}
}
apply plugin: 'org.asciidoctor.convert'

description = "Spring Cloud App Broker Documentation"

configurations {
	docs
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
	}
}

dependencies {
	implementation project(":spring-cloud-app-broker-core")
	implementation("org.springframework.boot:spring-boot-starter")
	implementation("org.springframework.boot:spring-boot-starter-security")
	implementation("org.springframework.boot:spring-boot-starter-tomcat")
	implementation("io.projectreactor:reactor-core")
	implementation("org.springframework.boot.experimental:spring-boot-starter-r2dbc:0.1.0.M3")
	implementation("org.springframework.boot.experimental:spring-boot-starter-data-r2dbc:0.1.0.M3")
	implementation("io.r2dbc:r2dbc-h2:0.8.0.RELEASE")

	docs("io.spring.docresources:spring-doc-resources:0.2.1.RELEASE@zip")
}

task prepareAsciidocBuild(type: Sync) {
	dependsOn configurations.docs
	// copy doc resources
	from {
		configurations.docs.collect { zipTree(it) }
	}
	// and doc sources
	from "src/docs/asciidoc"
	// to a temporary build directory
	into "$buildDir/asciidoc"
}

task('makePDF', type: org.asciidoctor.gradle.AsciidoctorTask){
	dependsOn prepareAsciidocBuild
	backends 'pdf'
	sourceDir = file("$buildDir/asciidoc")
	sources {
		include 'index.adoc'
	}
	options doctype: 'book', eruby: 'erubis'
	logDocuments = true
	attributes 'icons': 'font',
			'sectanchors': '',
			'sectnums': '',
			'toc': '',
			'source-highlighter' : 'coderay',
			'revnumber': project.version
}

asciidoctor {
	dependsOn makePDF
	sourceDir = file("$buildDir/asciidoc")
	sources {
		include '*.adoc'
	}
	resources {
		from(sourceDir) {
			include 'images/*', 'css/**', 'js/**'
		}
	}
	logDocuments = true
	backends = ["html5"]
	options doctype: 'book', eruby: 'erubis'
	attributes 'revnumber': project.version,
			'spring-version': project.version,
			'branch-or-tag': project.version.endsWith('SNAPSHOT') ? 'master' : "v${project.version}",
			'icons': 'font',
			'idprefix': '',
			'idseparator': '-',
			docinfo: 'shared',
			sectanchors: '',
			sectnums: '',
			stylesdir: "css/",
			stylesheet: 'spring.css',
			'linkcss': true,
			'nofooter': true,
			'allow-uri-read': '',
			'source-highlighter=highlight.js',
			'highlightjsdir=js/highlight',
			'highlightjs-theme=github'
}
