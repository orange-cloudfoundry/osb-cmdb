# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
    - image: springcloudservices/spring-cloud-app-broker-ci:v1

    working_directory: ~/repo

    environment:
      JAVA_TOOL_OPTIONS: "-Xms512m -Xmx2048m"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx512m -Xmx2048m" -Dorg.gradle.daemon=false'
      TERM: dumb

    steps:
    - checkout

    - restore_cache:
        key: sc-app-broker-{{ .Branch }}

    - run:
        name: "Populate Secrets from Environment"
        command: |
          cd ~/repo/ci/
          if [[ ${CIRCLE_BUILD_NUM} = "" ]]; then
              echo "populating from .envrc"
              [[ -f ".envrc-localci" ]] || (printf "Ensure .envrc is present in ci directory before running script"; exit 1)
              cat .envrc-localci >> $BASH_ENV
              source .envrc-localci
              ./scripts/manage-bosh-bbl-environment.sh generate-bbl-state-directory -b "${ACTIVE_BBL_ENV_LOCAL}"
              bbl -s "bosh-env-${ACTIVE_BBL_ENV_LOCAL}/bbl-state" print-env >> $BASH_ENV
          else
              echo "populating from bbl env"
              ./scripts/manage-bosh-bbl-environment.sh generate-bbl-state-directory -b "${ACTIVE_BBL_ENV_CIRCLE}"
              bbl -s "bosh-env-${ACTIVE_BBL_ENV_CIRCLE}/bbl-state" print-env >> $BASH_ENV
          fi

    - run:
        name: "Queue until all other builds finished"
        command: |
          cd ~/repo/ci/scripts
          ./wait-for-other-builds-to-finish.sh 60

    - run:
        name: "Download dependencies"
        command: ./gradlew assemble

    - save_cache:
        paths:
        - ~/.gradle
        key: sc-app-broker-{{ .Branch }}

    - run:
        name: "Disable Gradle daemon"
        command: touch ~/.gradle/gradle.properties && echo "org.gradle.daemon=false" >> ~/.gradle/gradle.properties

    - run:
        name: "Run unit tests"
        command: ./gradlew clean check codeCoverageReport --stacktrace

    - run:
        name: "Aggregate test results"
        when: always
        command: |
          mkdir -p ~/junit/
          find . -type f -regex ".*/build/test-results/.*" -exec cp {} ~/junit/ \;

    - run:
        name: "Upload tests coverage"
        command: bash <(curl -s https://codecov.io/bash)

    - store_artifacts:
        path: ~/junit/
        destination: artifacts

    - store_test_results:
        path: ~/junit/
        destination: testartifacts

    - run:
        name: "Start BOSH Lite"
        command: |
          cd ~/repo/ci
          ./scripts/wait-for-bosh-locks-to-be-released.sh 30
          bosh -n -d cf start

    - run:
        name: "Run acceptance tests"
        command: |
          ./gradlew -b spring-cloud-app-broker-sample/build.gradle assemble
          ./gradlew clean assemble check -PacceptanceTests --stacktrace --continue -b spring-cloud-app-broker-acceptance-tests/build.gradle

    - run:
        name: "BOSH Cleanup"
        command: bosh -n clean-up --all

    - store_test_results:
        path: ~/repo/spring-cloud-app-broker-acceptance-tests/build/test-results
        destination: acceptancetestartifacts