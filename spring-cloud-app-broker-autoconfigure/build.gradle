/*
 * Copyright 2016-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

description = "Spring Cloud App Broker Autoconfiguration"

dependencyManagement {
	imports {
		mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
	}
}

dependencies {
	implementation project(":spring-cloud-app-broker-core")
	implementation project(":spring-cloud-app-broker-deployer")
	implementation project(":spring-cloud-app-broker-deployer-cloudfoundry")
	implementation project(":spring-cloud-app-broker-security-credhub")
	implementation("org.springframework.boot:spring-boot-starter")
	implementation("io.projectreactor:reactor-core")
	implementation("io.projectreactor.ipc:reactor-netty")
	api("org.immutables:value:${immutablesVersion}")

	compileOnly("org.cloudfoundry:cloudfoundry-client-reactor:${cfJavaClientVersion}")
	compileOnly("org.cloudfoundry:cloudfoundry-operations:${cfJavaClientVersion}")
	compileOnly("org.springframework.credhub:spring-credhub-starter:${springCredhubVersion}")

	annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
	annotationProcessor("org.springframework.boot:spring-boot-autoconfigure-processor")

	testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")

	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("org.springframework.boot:spring-boot-starter-webflux")
	testImplementation("org.junit.jupiter:junit-jupiter-api")
	testImplementation("org.mockito:mockito-junit-jupiter:${mockitoVersion}")

	testCompileOnly("org.cloudfoundry:cloudfoundry-client-reactor:${cfJavaClientVersion}")
	testCompileOnly("org.cloudfoundry:cloudfoundry-operations:${cfJavaClientVersion}")
	testCompileOnly("org.springframework.credhub:spring-credhub-starter:${springCredhubVersion}")
}

compileJava.dependsOn(processResources)
