/*
 * Copyright 2016-2018. the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

description = "Spring Cloud App Broker Acceptance Tests"

// don't publish the jar for the acceptance tests project
configurations.archives.artifacts.clear()

dependencyManagement {
	imports {
		mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
	}
}

dependencies {
	testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")

	testImplementation("org.junit.jupiter:junit-jupiter-api")
	testImplementation("org.assertj:assertj-core")
	testImplementation("com.revinate:assertj-json:1.2.0")

	testImplementation("org.springframework.boot:spring-boot-starter-webflux")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("org.cloudfoundry:cloudfoundry-client-reactor:${cfJavaClientVersion}")
	testImplementation("org.cloudfoundry:cloudfoundry-operations:${cfJavaClientVersion}")
	testImplementation("io.projectreactor:reactor-core")
	testImplementation("io.projectreactor.ipc:reactor-netty")
}

test {
	// Only run the tests if acceptanceTests is specified
	onlyIf {
		project.hasProperty("acceptanceTests")
	}
	// Pass relevant java properties to the test task
	systemProperties << System.properties.findAll { it.key.startsWith("tests.") }
	systemProperties << System.properties.findAll { it.key.startsWith("spring.") }
}

// Disable classfile warnings because of cloudfoundry-client warnings
[compileJava, compileTestJava]*.options*.compilerArgs = [
	"-Xlint:serial",
	"-Xlint:varargs",
	"-Xlint:cast",
	"-Xlint:-classfile",
	"-Xlint:dep-ann",
	"-Xlint:divzero",
	"-Xlint:empty",
	"-Xlint:finally",
	"-Xlint:overrides",
	"-Xlint:path",
	"-Xlint:-processing",
	"-Xlint:static",
	"-Xlint:try",
	"-Xlint:fallthrough",
	"-Xlint:rawtypes",
	"-Xlint:deprecation",
	"-Xlint:unchecked",
	"-Xlint:-options",
	"-Werror"
]